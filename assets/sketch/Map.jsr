let camera, controls, scene, renderer;

init();
//render(); // remove when using next line for animation loop (requestAnimationFrame)
animate();

function init() {
	scene = new Scene();
	scene.background = new Color(0xcccccc);
	scene.fog = new FogExp2(0xcccccc, 0.002);

	renderer = new WebGLRenderer({ antialias: true });
	renderer.setPixelRatio(window.devicePixelRatio);
	renderer.setSize(window.innerWidth, window.innerHeight);
	document.body.appendChild(renderer.domElement);

	camera = new PerspectiveCamera(
		60,
		window.innerWidth / window.innerHeight,
		1,
		1000
	);
	camera.position.set(400, 200, 0);

	// world

	const geometry = new BoxGeometry(1, 1, 1);
	geometry.translate(0, 0.5, 0);
	const material = new MeshPhongMaterial({
		color: 0xffffff,
		flatShading: true,
	});

	for (let i = 0; i < 500; i++) {
		const mesh = new Mesh(geometry, material);
		mesh.position.x = Math.random() * 1600 - 800;
		mesh.position.y = 0;
		mesh.position.z = Math.random() * 1600 - 800;
		mesh.scale.x = 20;
		mesh.scale.y = Math.random() * 80 + 10;
		mesh.scale.z = 20;
		mesh.updateMatrix();
		mesh.matrixAutoUpdate = false;
		scene.add(mesh);
	}

	// lights

	const dirLight1 = new DirectionalLight(0xffffff);
	dirLight1.position.set(1, 1, 1);
	scene.add(dirLight1);

	const dirLight2 = new DirectionalLight(0x002288);
	dirLight2.position.set(-1, -1, -1);
	scene.add(dirLight2);

	const ambientLight = new AmbientLight(0x222222);
	scene.add(ambientLight);

	// controls
	controls = new MapControls(camera, renderer.domElement);
	controls.enableDamping = true;
	controls.dampingFactor = 0.05;

	controls.screenSpacePanning = false;
	controls.minDistance = 100;
	controls.maxDistance = 500;
	controls.maxPolarAngle = Math.PI / 2;

	// // controls.addEventListener('change', () => controls.saveState());

	// window.addEventListener('touchcancel', () => controls.reset());

	window.addEventListener('resize', onWindowResize);
}

function onWindowResize() {
	camera.aspect = window.innerWidth / window.innerHeight;
	camera.updateProjectionMatrix();

	renderer.setSize(window.innerWidth, window.innerHeight);
}

function animate() {
	requestAnimationFrame(animate);
	controls.update();
	render();
}

function render() {
	renderer.render(scene, camera);
}
